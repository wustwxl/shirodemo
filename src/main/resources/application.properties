# 编码问题
server.tomcat.uri-encoding=UTF-8
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.messages.encoding=UTF-8

#开发坏境
#spring.profiles.active=dev
#测试坏境
#spring.profiles.active=test
#商用坏境
#spring.profiles.active=prod

# 随机字符串
com.wust.wxl.value=${random.value}
# 随机int
com.wust.wxl.number=${random.int}
# 随机long
com.wust.wxl.bignumber=${random.long}
# 10以内的随机数
com.wust.wxl.test10=${random.int(10)}
# 10-20的随机数
com.wust.wxl.test10_20=${random.int[10,20]}

# 配置数据源信息
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/demo?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=123456

# mybatis
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.wust.entity

# spring.jpa.hibernate.ddl-auto配置了实体类维护数据库表结构的具体行为
# update表示当实体类的属性发生变化时，表结构跟着更新
# create表示启动的时候删除上一次生成的表，并根据实体类重新生成表，这个时候之前表中的数据就会被清空
# create-drop表示启动时根据实体类生成表，但是当sessionFactory关闭的时候表会被删除
# validate表示启动时验证实体类和数据表是否一致
# none表示啥都不做
#spring.jpa.hibernate.ddl-auto=update
# 表示hibernate在操作的时候在控制台打印真实的sql语句
#spring.jpa.show-sql=true
# 格式化输出的json字符串
#spring.jackson.serialization.indent_output=true

#httpclient配置
http.maxTotal = 100
http.defaultMaxPerRoute = 20
http.connectTimeout=1000
http.connectionRequestTimeout=500
http.socketTimeout=10000
http.staleConnectionCheckEnabled=true

#thymeleaf配置
# 把thymeleaf的缓存关掉，用于支持页面修改后重新发布到spring-boot内嵌的tomcat中去
spring.thymeleaf.cache=false
# 是否检查templates路径是否存在
spring.thymeleaf.check-template-location=true
# 设定Content-Type
spring.thymeleaf.content-type=text/html
# 是否允许mvc使用thymeleaf
spring.thymeleaf.enabled=true
# 设定编码
spring.thymeleaf.encoding=utf-8
# 使用thymeleaf的html5模板
# spring.thymeleaf.mode=HTML5
# 配置Controller视图跳转中thymeleaf模板文件的的前缀prefix是”classpath:/templates/”,后缀suffix是”.html”
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# Redis配置
# Redis数据库索引（默认为0）
spring.redis.database = 0
# Redis服务器地址
spring.redis.host = 127.0.0.1
# Redis服务器连接端口
spring.redis.port = 6379
# Redis服务器连接密码（默认为空）
spring.redis.password = 123456
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active = 10
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait = -1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle = 10
# 连接池中的最小空闲连接
spring.redis.pool.min-idle = 0
# 连接超时时间（毫秒）
spring.redis.timeout = 500
