<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wust.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="com.wust.entity.Users">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="creater" jdbcType="BIGINT" property="creater" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
    <result column="updater" jdbcType="BIGINT" property="updater" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <collection property="roleList" ofType="com.wust.entity.Roles">
      <id column="role_id" property="role_id"/>
      <result column="role_name" property="role_name" jdbcType="VARCHAR" />
      <collection property="permissionList" ofType="com.wust.entity.Permissions">
        <id column="permission_id" property="permission_id"/>
        <result column="permission_name" property="permission_name" jdbcType="VARCHAR" />
      </collection>
    </collection>
  </resultMap>

  <sql id="Base_Column_List">
    id, username, pwd, phone, age, sex, create_time, creater, update_time, updater, deleted, status
  </sql>

  <insert id="insert" keyProperty="id"  useGeneratedKeys="true" parameterType="com.wust.entity.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="creater != null">
        creater,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updater != null">
        updater,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="updater != null">
        #{updater,jdbcType=BIGINT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <select id="selectByRecord" parameterType="com.wust.entity.Users" resultMap="BaseResultMap">
    SELECT
    u.id,
    u.username,
    u.pwd,
    u.phone,
    u.age,
    u.status,
    u.create_time,
    u.creater,
    u.update_time,
    u.updater,
    u.sex AS sex,
    r.id AS role_id,
    r.role_name,
    p.id AS permission_id,
    p.permiss_name AS permission_name
    FROM
    users u
    LEFT JOIN user_role ur ON ur.user_id = u.id
    LEFT JOIN roles r ON r.id= ur.role_id
    LEFT JOIN role_permission rp ON rp.role_id = ur.role_id
    LEFT JOIN permission p ON p.id = rp.permission_id
    <where>
      u.deleted = 0
      <if test="username != null"> AND u.username = #{username,jdbcType=VARCHAR} </if>
      <if test="age != null"> AND u.age = #{age,jdbcType=INTEGER} </if>
      <if test="sex != null"> AND u.sex = #{sex,jdbcType=INTEGER} </if>
      <if test="creater != null"> AND u.creater = #{creater,jdbcType=BIGINT} </if>
      <if test="updater != null"> AND u.updater = #{updater,jdbcType=BIGINT} </if>
      <if test="status != null"> AND u.status = #{status,jdbcType=INTEGER} </if>
    </where>
  </select>

  <select id="selectByPhone" parameterType="java.lang.String" resultMap="BaseResultMap" >
    SELECT
    u.id,
    u.username,
    u.pwd,
    u.phone,
    u.age,
    u.status,
    u.create_time,
    u.creater,
    u.update_time,
    u.updater,
    u.sex AS sex,
    r.id AS role_id,
    r.role_name,
    p.id AS permission_id,
    p.permiss_name AS permission_name
    FROM
    users u
    LEFT JOIN user_role ur ON ur.user_id = u.id
    LEFT JOIN roles r ON r.id= ur.role_id
    LEFT JOIN role_permission rp ON rp.role_id = ur.role_id
    LEFT JOIN permission p ON p.id = rp.permission_id
    WHERE u.phone = #{phone} AND u.deleted = 0
  </select>

  <select id="selectAllUser" resultMap="BaseResultMap" >
    SELECT
    u.id,
    u.username,
    u.pwd,
    u.phone,
    u.age,
    u.status,
    u.create_time,
    u.creater,
    u.update_time,
    u.updater,
    u.sex AS sex,
    r.id AS role_id,
    r.role_name,
    p.id AS permission_id,
    p.permiss_name AS permission_name
    FROM
    users u
    LEFT JOIN user_role ur ON ur.user_id = u.id
    LEFT JOIN roles r ON r.id= ur.role_id
    LEFT JOIN role_permission rp ON rp.role_id = ur.role_id
    LEFT JOIN permission p ON p.id = rp.permission_id
    WHERE u.deleted = 0
  </select>

  <delete id="deleteByPhone" parameterType="java.lang.String">
    delete from users where phone = #{phone,jdbcType=VARCHAR}
  </delete>

  <update id="updateByRecord" parameterType="com.wust.entity.Users">
    update users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="updater != null">
        updater = #{updater,jdbcType=BIGINT},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where phone = #{phone,jdbcType=VARCHAR}
  </update>

  <update id="updatePhone" parameterType="java.lang.String">
    update users
    set phone = #{newPhone,jdbcType=VARCHAR}
    where phone = #{oldPhone,jdbcType=VARCHAR}
  </update>

  <select id="countByRecord" parameterType="com.wust.entity.Users" resultType="java.lang.Long">
    select count(*) from users
    <where>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR} AND
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR} AND
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER} AND
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER} AND
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR} AND
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=BIGINT} AND
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=VARCHAR} AND
      </if>
      <if test="updater != null">
        updater = #{updater,jdbcType=BIGINT} AND
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER} AND
      </if>
        deleted = 0
    </where>
  </select>

  <select id="countByPhone" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*) from users WHERE phone = #{phone,jdbcType=VARCHAR}
  </select>

  <update id="updatePwd" parameterType="java.lang.String">
    update users
    set pwd = #{pwd,jdbcType=VARCHAR}
    where phone = #{phone,jdbcType=VARCHAR}
  </update>

</mapper>